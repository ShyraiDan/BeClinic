import { Jost, Roboto } from 'next/font/google'
import { notFound } from 'next/navigation'
import { SessionProvider } from 'next-auth/react'
import { NextIntlClientProvider, hasLocale } from 'next-intl'
import { getLocale, getMessages, setRequestLocale } from 'next-intl/server'
import { ReactNode } from 'react'

import { auth } from '@/auth'
import Footer from '@/components/Footer/Footer'
import { Header } from '@/components/Header/Header'
import { Toaster } from '@/components/ui/sonner'
import { routing } from '@/i18n/routing'

import type { Metadata } from 'next'

import './globals.css'

const roboto = Roboto({
  subsets: ['cyrillic', 'latin'],
  weight: ['300', '400', '500', '700'],
  display: 'swap',
  variable: '--primary-font',
  style: ['normal']
})

const jost = Jost({
  subsets: ['cyrillic', 'latin'],
  weight: ['300', '400', '500', '700'],
  display: 'swap',
  variable: '--secondary-font',
  style: ['normal']
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
}

interface RootLayoutProps {
  children: ReactNode
}

export const generateStaticParams = () => {
  return routing.locales.map((locale) => ({ locale }))
}

const RootLayout = async ({ children }: RootLayoutProps) => {
  const locale = await getLocale()
  const messages = await getMessages()
  setRequestLocale(locale)
  const session = await auth()

  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }

  return (
    <html lang={locale}>
      <body className={`${roboto.variable} ${jost.variable} bg-[#f7f7f7] antialiased`}>
        <SessionProvider session={session}>
          <NextIntlClientProvider locale={locale} messages={messages}>
            <Header session={session} />
            <main>{children}</main>
            <Footer />

            <Toaster richColors />
          </NextIntlClientProvider>
        </SessionProvider>
      </body>
    </html>
  )
}

export default RootLayout
